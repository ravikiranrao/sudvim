snippet Pi "The Pi for Paragraph"  b
\newpage
\begin{tcolorbox}
$1
\end{tcolorbox}
$0
endsnippet

snippet Pis "The 8 Pis" b

\newpage
\begin{tcolorbox}
P1:$0
\end{tcolorbox}

\newpage
\begin{tcolorbox}
P2:
\end{tcolorbox}

\newpage
\begin{tcolorbox}
P3:
\end{tcolorbox}

\newpage
\begin{tcolorbox}
P4:
\end{tcolorbox}

\newpage
\begin{tcolorbox}
P5:
\end{tcolorbox}

\newpage
\begin{tcolorbox}
P6:
\end{tcolorbox}

\newpage
\begin{tcolorbox}
P7:
\end{tcolorbox}

\newpage
\begin{tcolorbox}
P8:
\end{tcolorbox}

endsnippet

snippet blueitem "creates a blue font item in enum" b
\item \textcolor{blue}{$1} 
$0
endsnippet



snippet frac "puts fraction"
$\frac{$1}{$2}$ $0
endsnippet

snippet item "Includes \item"
\item $0
endsnippet



snippet sipi "SiPis to write NSPQs - SRSI" b
%%%%%%%%%%%%%%%%%%%%%%%
%SiPi-Started `date +%d/%m/%y`%
%%%%%%%%%%%%%%%%%%%%%%%
%S1:${1:Idea:} 
$0
%S2:${2:Idea:}

%S3:${3:Idea:}

%S4:${4:Idea:}

%S5:${5:Idea:}

%S6:${6:Idea:}

%S7:${7:Idea:}

%S8:${8:Idea:}

%S9:${9:Idea:}
%%%%%%%%%%%%%%%%%%%%%
%SiPi-Ended `date +%d/%m/%y`%
%%%%%%%%%%%%%%%%%%%%%
endsnippet 

snippet it
{\it $1} $0
endsnippet

snippet start
%This document was created on `date +%d.%m.%y`
\documentclass{article}
\usepackage{enumitem}
\usepackage{graphicx}
\usepackage{subfigure}
\usepackage{amsmath}
\usepackage{color}
\usepackage{verbatim}
\usepackage[many]{tcolorbox}
\title{$1}
\begin{document}
\maketitle
$0

\end{document}
endsnippet

#help snippets start from here:

snippet linenumberhelp
************************************************************************************
*To create line numbered pdf use the following:   				   *
*										   *
*\usepackage[switch, modulo]{lineno}                                               *
*and then use \begin{linenumbers} and \end{linenumbers}
*More Details: https://texblog.org/2012/02/08/adding-line-numbers-to-documents/    *
************************************************************************************
endsnippet


snippet bibhelp
\begin{comment}
*********************************************************************
TO INCLUDE BIBLIOGRAPHY OR REFERENCES:

1) Create a file biblio.bib and include the details of your references there.
This file must contain the  details in the following format:
%Note that {D} and {I} below are placed within brackets, that is because 
if we miss the brackets these letters will be displayed in lowercase.
@Article{robertson:96,
  author =   {Robertson, Douglas S. and
                  Grant, Michael C.},
  title =   {Feedback and Chaos in {D}arwinian Evolution, part {I}:
                  Theoretical Considerations},
  journal =   {Complexity},
  year =   1996,
  volume =  2,
  number =  1,
  month =  {sept/oct},
  pages =  {10-14}
}

%| Books and collections

@Book{brown:1836,
  author =   {Brown, Thomas},
  title =   {The Conchologist's Text-book},
  publisher =   {Archibald Fullerton and Co},
  year =   1836,
  address =  {Glasgow}
}

2. In the main latex file namely bibdemo.tex include the following two lines:

\bibliography{biblio}       % the name of the BibTeX file without extension
\bibliographystyle{plain}   % the type of formatting to use

3. Plain is one type of formating. To know different available types, refer
http://amath.colorado.edu/documentation/LaTeX/reference/faq/bibstyles.html


4. When you need to cite a paper.. just say \cite{robertson:96} in your main document


5. Then, compile the document using these commands:

latex bibdemo
bibtex bibdemo
latex bibdemo
latex bibdemo

Note that you must do "latex filename" many times.
\end{comment}

endsnippet 

#####################################################
#below is the ready made tex snippets.               # 
#Everything that is above was created by sudarshan  #
#####################################################
priority -50

extends texmath

global !p

def create_table(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]

	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	
	rows = int_val(rows)
	cols = int_val(cols)

	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	
	snip.buffer[snip.line] = ''
	
	final_str = old_spacing + "\\begin{tabular}{|" + "|".join(['$' + str(i + 1) for i in range(cols)]) + "|}\n"

	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + offset) for j in range(cols)])

		final_str += " \\\\\\\n"

	final_str += old_spacing + "\\end{tabular}\n$0"

	snip.expand_anon(final_str)

def add_row(snip):
	row_len = int(''.join(s for s in snip.buffer[snip.line] if s.isdigit()))
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]

	snip.buffer[snip.line] = ''
	
	final_str = old_spacing
	final_str += " & ".join(['$' + str(j + 1) for j in range(row_len)])
	final_str += " \\\\\\"

	snip.expand_anon(final_str)

endglobal

snippet "b(egin)?" "begin{} / end{}" br
\begin{${1:something}}
	${0:${VISUAL}}
\end{$1}
endsnippet

snippet abs "abstract environment" b
\begin{abstract}
	$0
\end{abstract}
endsnippet

snippet tab "tabular / array environment" b
\begin{${1:t}${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${2:c}}
$0${2/(?<=.)(c|l|r)|./(?1: & )/g}
\end{$1${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
endsnippet

pre_expand "create_table(snip)"
snippet "gentbl(\d+)x(\d+)" "Generate table of *width* by *height*" r  
endsnippet

pre_expand "add_row(snip)"
snippet "tr(\d+)" "Add table row of dimension ..." r
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{${4:t}${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${5:c}}
	$0${5/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$4${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${2:htpb}]
	\centering
	\includegraphics[width=${3:0.8}\linewidth]{${4:name.ext}}
	\caption{${4/(\w+)\.\w+/\u$1/}$0}
	\label{fig:${4/(\w+)\.\w+/$1/}}
\end{figure}
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet it "Individual item" b
\item $0
endsnippet

snippet part "Part" b
\part{${1:part name}}
\label{prt:${2:${1/(\w+)|\W+/(?1:\L$0\E:_)/ga}}}

$0
endsnippet

snippet cha "Chapter" b
\chapter{${1:chapter name}}
\label{cha:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet

snippet sec "Section" b
\section{${1:section name}}
\label{sec:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet

snippet sec* "Section" b
\section*{${1:section name}}
\label{sec:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

${0}
endsnippet


snippet sub "Subsection" b
\subsection{${1:subsection name}}
\label{sub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet

snippet sub* "Subsection" b
\subsection*{${1:subsection name}}
\label{sub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

${0}
endsnippet

snippet ssub "Subsubsection" b
\subsubsection{${1:subsubsection name}}
\label{ssub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet

snippet ssub* "Subsubsection" b
\subsubsection*{${1:subsubsection name}}
\label{ssub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

${0}
endsnippet

snippet par "Paragraph" b
\paragraph{${1:paragraph name}}
\label{par:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet

snippet subp "Subparagraph" b
\subparagraph{${1:subparagraph name}}
\label{par:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet

snippet ni "Non-indented paragraph" b
\noindent
$0
endsnippet

snippet pac "Package" b
\usepackage`!p snip.rv='[' if t[1] else ""`${1:options}`!p snip.rv = ']' if t[1] else ""`{${2:package}}$0
endsnippet

snippet lp "Long parenthesis"
\left(${1:${VISUAL:contents}}\right)$0
endsnippet

snippet "mint(ed)?( (\S+))?" "Minted code typeset" br
\begin{minted}{${1:`!p
snip.rv = match.group(3) if match.group(2) is not None else "language"`}}
${2:${VISUAL:code}}
\end{minted}$0
endsnippet
# vim:ft=snippets:
